// –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –∞–≤—Ç–æ –∑–∞–∫–∞–∑–æ–≤
console.log('üß™ –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –∞–≤—Ç–æ –∑–∞–∫–∞–∑–æ–≤\n');

// –°–∏–º—É–ª—è—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ has30DaysPassed
function has30DaysPassed(dateString) {
  const date = new Date(dateString);
  const now = new Date();
  const daysDiff = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));
  return daysDiff >= 30;
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã
const today = new Date();
const clients = [
  {
    id: '1',
    name: '–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç',
    createdAt: new Date(today.getTime() - 1 * 24 * 60 * 60 * 1000).toISOString(), // 1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥
    lastAutoOrderCheck: new Date(today.getTime() - 1 * 24 * 60 * 60 * 1000).toISOString(),
    isActive: true,
    autoOrdersEnabled: true
  },
  {
    id: '2', 
    name: '–ö–ª–∏–µ–Ω—Ç 29 –¥–Ω–µ–π',
    createdAt: new Date(today.getTime() - 29 * 24 * 60 * 60 * 1000).toISOString(), // 29 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    lastAutoOrderCheck: new Date(today.getTime() - 29 * 24 * 60 * 60 * 1000).toISOString(),
    isActive: true,
    autoOrdersEnabled: true
  },
  {
    id: '3',
    name: '–ö–ª–∏–µ–Ω—Ç 30 –¥–Ω–µ–π',
    createdAt: new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString(), // 30 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    lastAutoOrderCheck: new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString(),
    isActive: true,
    autoOrdersEnabled: true
  },
  {
    id: '4',
    name: '–ö–ª–∏–µ–Ω—Ç 45 –¥–Ω–µ–π',
    createdAt: new Date(today.getTime() - 45 * 24 * 60 * 60 * 1000).toISOString(), // 45 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    lastAutoOrderCheck: new Date(today.getTime() - 15 * 24 * 60 * 60 * 1000).toISOString(), // 15 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    isActive: true,
    autoOrdersEnabled: true
  }
];

console.log('üìÖ –°–µ–≥–æ–¥–Ω—è:', today.toDateString());
console.log('');

clients.forEach(client => {
  const daysSinceCreation = has30DaysPassed(client.createdAt);
  const daysSinceLastCheck = has30DaysPassed(client.lastAutoOrderCheck || client.createdAt);
  const isEligible = daysSinceCreation || daysSinceLastCheck;
  
  const created = new Date(client.createdAt);
  const lastCheck = new Date(client.lastAutoOrderCheck);
  const daysSinceCreationNum = Math.floor((today.getTime() - created.getTime()) / (1000 * 60 * 60 * 24));
  const daysSinceLastCheckNum = Math.floor((today.getTime() - lastCheck.getTime()) / (1000 * 60 * 60 * 24));
  
  console.log(`üë§ ${client.name}:`);
  console.log(`   –î–Ω–µ–π —Å —Å–æ–∑–¥–∞–Ω–∏—è: ${daysSinceCreationNum} (${daysSinceCreation ? '‚úÖ' : '‚ùå'})`);
  console.log(`   –î–Ω–µ–π —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: ${daysSinceLastCheckNum} (${daysSinceLastCheck ? '‚úÖ' : '‚ùå'})`);
  console.log(`   –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∞–≤—Ç–æ –∑–∞–∫–∞–∑–æ–≤: ${isEligible ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
  console.log('');
});

console.log('üéØ –û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ:');
console.log('‚Ä¢ –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç: –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω (–º–µ–Ω—å—à–µ 30 –¥–Ω–µ–π)');
console.log('‚Ä¢ –ö–ª–∏–µ–Ω—Ç 29 –¥–Ω–µ–π: –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω (–º–µ–Ω—å—à–µ 30 –¥–Ω–µ–π)');
console.log('‚Ä¢ –ö–ª–∏–µ–Ω—Ç 30 –¥–Ω–µ–π: –î–û–°–¢–£–ü–ï–ù (—Ä–æ–≤–Ω–æ 30 –¥–Ω–µ–π)');
console.log('‚Ä¢ –ö–ª–∏–µ–Ω—Ç 45 –¥–Ω–µ–π: –î–û–°–¢–£–ü–ï–ù (–ø–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞ 15 –¥–Ω–µ–π –Ω–∞–∑–∞–¥, –Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ 45 –¥–Ω–µ–π –Ω–∞–∑–∞–¥)');